---
# These options are compatible with ClangFormat version 15.0.0
AccessModifierOffset: -2
AlignAfterOpenBracket: Align
AlignArrayOfStructures: Left
AlignConsecutiveAssignments: false
AlignConsecutiveBitFields: false
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: false
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: true
AllowAllConstructorInitializersOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: All
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: No
AttributeMacros: ['__capability']
BinPackArguments: true
BinPackParameters: true
BitFieldColonSpacing: Both
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: Never
  AfterEnum: false
  AfterExternBlock: false
  AfterFunction: false
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterStruct: false
  AfterUnion: false
  BeforeCatch: false
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
BreakAfterJavaFieldAnnotations: false
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: false
BreakBeforeTernaryOperators: false
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: true
ColumnLimit: 80
CommentPragmas: '^ IWYU pragma:'
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2
Cpp11BracedListStyle: true
DeriveLineEnding: true
DerivePointerAlignment: false
DisableFormat: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
ForEachMacros: ['BOOST_FOREACH', 'FOREACH', 'foreach', 'Q_FOREACH']
IfMacros: ['IF', 'KJ_IF_MAYBE']
IncludeBlocks: Regroup
IncludeCategories:
  - Regex:           '^<.*\.h>' # C standard template library headers
    Priority:        1
    SortPriority:    1
    CaseSensitive:   false
  - Regex:           '^<.*' # C++ standard template library headers
    Priority:        2
    SortPriority:    2
    CaseSensitive:   false
  - Regex:           '.*' # All other headers
    Priority:        3
    SortPriority:    3
    CaseSensitive:   false
IncludeIsMainRegex: '([-_](test|unittest))?$'
IncludeIsMainSourceRegex: ''
IndentAccessModifiers: false
IndentCaseBlocks: true
IndentCaseLabels: true
IndentExternBlock: NoIndent
IndentGotoLabels: true
IndentPPDirectives: BeforeHash
IndentWidth: 2
IndentWrappedFunctionNames: false
InsertTrailingCommas: None
JavaImportGroups: []
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: Signature
MacroBlockBegin: ''
MacroBlockEnd: ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
NamespaceMacros: []
ObjCBinPackProtocolList: Always
ObjCBlockIndentWidth: 2
ObjCBreakBeforeNestedBlockParam: true
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: false
PPIndentWidth: 2
PackConstructorInitializers: BinPack
PenaltyBreakAssignment: 8
PenaltyBreakBeforeFirstCallParameter: 4
PenaltyBreakComment: 16
PenaltyBreakFirstLessLess: 8
PenaltyBreakOpenParenthesis: 4
PenaltyBreakString: 16
PenaltyBreakTemplateDeclaration: 16
PenaltyExcessCharacter: 128
PenaltyIndentedWhitespace: 1
PenaltyReturnTypeOnItsOwnLine: 32
PointerAlignment: Left
QualifierAlignment: Left
RawStringFormats:
  - Language: Cpp
    Delimiters: ['cc', 'CC', 'cpp', 'Cpp', 'CPP', 'c++', 'C++']
    CanonicalDelimiter: ''
    BasedOnStyle: Google
  - Language: TextProto
    Delimiters: ['pb', 'PB', 'proto', 'PROTO']
    EnclosingFunctions:
      - 'EqualsProto'
      - 'EquivToProto'
      - 'PARSE_PARTIAL_TEXT_PROTO'
      - 'PARSE_TEST_PROTO'
      - 'PARSE_TEXT_PROTO'
      - 'ParseTextOrDie'
      - 'ParseTextProtoOrDie'
      - 'ParseTestProto'
      - 'ParsePartialTestProto'
    CanonicalDelimiter: pb
    BasedOnStyle: Google
ReferenceAlignment: Left
ReflowComments: true
RemoveBracesLLVM: false
SeparateDefinitionBlocks: Leave
ShortNamespaceLines: 0
SortIncludes: CaseInsensitive
SortJavaStaticImport: Before
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Before
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: true
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterIfMacros: true
  AfterOverloadedOperator: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles: Never
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInCStyleCastParentheses: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: -1
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard: Latest
StatementAttributeLikeMacros: ['Q_EMIT']
StatementMacros: ['Q_UNUSED', 'QT_REQUIRE_VERSION']
TabWidth: 8
TypenameMacros: ['STACK_OF', 'LIST']
UseCRLF: false
UseTab: Never
WhitespaceSensitiveMacros:
  - 'STRINGIZE'
  - 'PP_STRINGIZE'
  - 'BOOST_PP_STRINGIZE'
  - 'NS_SWIFT_NAME'
  - 'CF_SWIFT_NAME'
